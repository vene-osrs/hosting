name: OpenOSRS - Webhook

on: repository_dispatch

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Triggered message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          color: "#ffb347"
          username: OpenOSRS
          message: A manual ${{ github.event.action }} bootstrap has been triggered

      - name: Set up JDK 11
        uses: actions/setup-java@master
        with:
          java-version: 11

      - uses: actions/checkout@v2.3.1
        with:
          repository: open-osrs/hosting
          ref: master
          path: OpenOSRS-hosting

      - uses: actions/checkout@v2.3.1
        with:
          repository: open-osrs/runelite
          ref: master
          path: OpenOSRS

      - uses: actions/cache@v2.0.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: OpenOSRS

      - name: Assembling
        run: ./gradlew assemble --console=plain
        working-directory: OpenOSRS

      - name: Building
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Bootstrap nightly
        if: github.event.action == 'nightly'
        run: ./gradlew :runelite-client:bootstrapNightly --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Bootstrap stable
        if: github.event.action == 'stable'
        run: ./gradlew :runelite-client:bootstrapStable --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Bootstrap staging
        if: github.event.action == 'staging'
        run: ./gradlew :runelite-client:bootstrapStaging --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Bootstrap nightly and stable
        if: github.event.action == 'nightly stable'
        run: ./gradlew :runelite-client:bootstrapNightly --stacktrace -x test -x checkstyleMain --console=plain && ./gradlew :runelite-client:bootstrapStable --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: OpenOSRS

      - name: Copy bootstrap
        run: cp -af /home/runner/work/hosting/hosting/OpenOSRS/runelite-client/build/bootstrap/. /home/runner/work/hosting/hosting/OpenOSRS-hosting

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2.8.1
        with:
          token: ${{ secrets.OpenOSRS }}
          branch: MANUAL-UPDATE
          title: 'bootstrap: ${{ github.event.action }} release'
          body: This is an auto-generated PR with a ${{ github.event.action }} release
          commit-message: 'bootstrap: ${{ github.event.action }} release'
          labels: "automated-pull-request"
          path: OpenOSRS-hosting
          branch-suffix: short-commit-hash

      - name: Finished message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          color: "#77dd77"
          username: OpenOSRS
          message: Manual ${{ github.event.action }} bootstrap finished
